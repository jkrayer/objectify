!function(window){function Objectify(form,exclusions,sanitize){return this.form=form,this.exclusions=exclusions,this.sanitize=sanitize,this.obj={},this.currentElement=null,this.getValues()}function objectify(form,exclusions,sanitize){return"object"!=typeof form&&void 0===form.nodeName&&"FORM"!==form.nodeName?(console.error("A form element was not passed as the first argument of objectify."),!1):(exclusions=exclusions||[],sanitize=sanitize||{},new Objectify(form,exclusions,sanitize))}return Objectify.prototype.getValues=function(){var elements=this.form.elements,count=elements.length,i=0;for(i;i<count;i++)if(this.currentElement=elements[i],!(this.exclusions.indexOf(this.currentElement.name)>-1))switch(this.currentElement.tagName){case"BUTTON":case"FIELDSET":continue;case"INPUT":switch(this.currentElement.type){case"button":case"submit":case"reset":continue;case"checkbox":case"radio":this.setCheckValues();break;default:this.setValue()}break;case"SELECT":switch(this.currentElement.type){case"select-multiple":this.setMultipleValues();break;default:this.setValue()}break;default:this.setValue()}return this.obj},Objectify.prototype.setValue=function(){this.hasKey()||(this.obj[this.currentElement.name]=this.getSanitizedValue())},Objectify.prototype.setCheckValues=function(){if(this.currentElement.checked){if(this.obj.hasOwnProperty(this.currentElement.name))return this.obj[this.currentElement.name].push(this.getSanitizedValue());this.obj[this.currentElement.name]="radio"===this.currentElement.type?this.getSanitizedValue():[this.getSanitizedValue()]}},Objectify.prototype.setMultipleValues=function(){var select=this.currentElement,count=this.currentElement.options.length,name="",i=0;if(!this.hasKey())for(name=this.currentElement.name,this.obj[name]=[],i;i<count;i++)this.currentElement=select.options[i],this.currentElement.selected&&this.obj[name].push(this.getSanitizedValue())},Objectify.prototype.getSanitizedValue=function(){var name=this.currentElement.name;return"function"==typeof this.sanitize[name]?this.sanitize[name](this.currentElement.value):this.currentElement.value},Objectify.prototype.hasKey=function(){return!!this.obj.hasOwnProperty(this.currentElement.name)&&(console.warn("Duplicate name attribute ("+this.currentElement.name+") found in form. Value not saved."),!0)},window.objectify=objectify}(window);
//# sourceMappingURL=dist/objectify.min.js.map